aTest  <- loadTable(file.path(Filer, "test",  "x_test.txt" ))
#Take a look at the two tables (just checking what I've got so far) - run at command line
aTest
aTrain
#Join the test and train tables
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
setnames(dtSubject, V1, "subject")
dtActivity <- rbind(dtActivityTrain, dtActivityTest)
setnames(dtActivity, "V1", "activityNum")
dt <- rbind(dtTrain, dtTest)
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
dtSubject <- rbind(dtSubjectTrain, dtSubjectTest)
setnames(dtSubject, "V1", "subject")
dtActivity <- rbind(dtActivityTrain, dtActivityTest)
setnames(dtActivity, "V1", "activityNum")
dt <- rbind(aTrain, aTest)
View(dt)
View(activity)
View(activityTrain)
View(aTest)
View(aTrain)
View(cleanedData)
View(dt)
View(dtActivity)
View(dtActivityTest)
View(dtActivityTrain)
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
getwd()
packages <- c("data.table", "reshape2")
sapply(packages, require, character.only = TRUE, quietly = TRUE)
## data.table   reshape2
##       TRUE       TRUE
path <- getwd()
path
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
f <- "Dataset.zip"
if (!file.exists(path)) {
dir.create(path)
}
download.file(url, file.path(path, f))
dtSubjectTrain <- fread(file.path(pathIn, "train", "subject_train.txt"))
dtSubjectTest <- fread(file.path(pathIn, "test", "subject_test.txt"))
dtActivityTrain <- fread(file.path(pathIn, "train", "Y_train.txt"))
dtActivityTest <- fread(file.path(pathIn, "test", "Y_test.txt"))
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
pathIn
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
View(dtFeatures)
View(dtFeatures)
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
View(dtFeatures)
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
View(dtTidy)
View(dtTidy)
read.table(dtTidy)
source('~/Desktop/coursera/GACDProjectTidy/run_analysisX.R')
packages <- c("dplyr", "reshape2", "data.table")
sapply(packages, require, character.only = TRUE)
#Get raw data from website
setwd("~/Desktop/coursera/GACDProjectTidy")
getdata<-function(fileUrl, dir, filename, ext){
# create directory if doesn't exist
dirName<-paste(dir, sep = "")
if(!file.exists(dirName)){
dir.create(path = dirName)
}
# fetch data if not already downloaded
pastehere<-paste("./", dirName,"/", filename, ext, sep = "")
if(!file.exists(pastehere)){
download.file(url = fileUrl, destfile = pastehere,
method = "curl")
datedownloaded<-date()
}
pastehere
}
#Get the raw data from the website, unzip it, and list the subdirectories and files
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
temp<-getdata(fileUrl = fileURL, dir = "OriginalDataZipfile",
filename = "data", ext = ".zip")
thedata<-unzip(zipfile = temp)
thedata
file.rename(from="UCI HAR Dataset", to="ucihar")
getwd()
# Step1. Merges the training and the test sets to create one data set.
# setwd("~/Desktop/Online Coursera/Coursera-Getting-and-Cleaning-Data/peer_assessment/")
trainData <- read.table("./ucihar/train/X_train.txt")
dim(trainData) # 7352*561
head(trainData)
trainLabel <- read.table("./ucihar/train/y_train.txt")
table(trainLabel)
trainSubject <- read.table("./ucihar/train/subject_train.txt")
testData <- read.table("./ucihar/test/X_test.txt")
dim(testData) # 2947*561
testLabel <- read.table("./ucihar/test/y_test.txt")
table(testLabel)
testSubject <- read.table("./ucihar/test/subject_test.txt")
joinData <- rbind(trainData, testData)
dim(joinData) # 10299*561
joinLabel <- rbind(trainLabel, testLabel)
dim(joinLabel) # 10299*1
joinSubject <- rbind(trainSubject, testSubject)
dim(joinSubject) # 10299*1
# Step2. Extracts only the measurements on the mean and standard
# deviation for each measurement.
features <- read.table("./ucihar/features.txt")
dim(features)  # 561*2
meanStdIndices <- grep("mean\\(\\)|std\\(\\)", features[, 2])
length(meanStdIndices) # 66
joinData <- joinData[, meanStdIndices]
dim(joinData) # 10299*66
names(joinData) <- gsub("\\(\\)", "", features[meanStdIndices, 2]) # remove "()"
names(joinData) <- gsub("mean", "Mean", names(joinData)) # capitalize M
names(joinData) <- gsub("std", "Std", names(joinData)) # capitalize S
names(joinData) <- gsub("-", "", names(joinData)) # remove "-" in column names
# Step3. Uses descriptive activity names to name the activities in
# the data set
activity <- read.table("./ucihar/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[joinLabel[, 1], 2]
joinLabel[, 1] <- activityLabel
names(joinLabel) <- "activity"
# Step4. Appropriately labels the data set with descriptive activity
# names.
names(joinSubject) <- "subject"
cleanedData <- cbind(joinSubject, joinLabel, joinData)
dim(cleanedData) # 10299*68
write.table(cleanedData, "merged_data.txt") # write out the 1st dataset
# Step5. Creates a second, independent tidy data set with the average of
# each variable for each activity and each subject.
subjectLen <- length(table(joinSubject)) # 30
activityLen <- dim(activity)[1] # 6
columnLen <- dim(cleanedData)[2]
result <- matrix(NA, nrow=subjectLen*activityLen, ncol=columnLen)
result <- as.data.frame(result)
colnames(result) <- colnames(cleanedData)
row <- 1
for(i in 1:subjectLen) {
for(j in 1:activityLen) {
result[row, 1] <- sort(unique(joinSubject)[, 1])[i]
result[row, 2] <- activity[j, 2]
bool1 <- i == cleanedData$subject
bool2 <- activity[j, 2] == cleanedData$activity
result[row, 3:columnLen] <- colMeans(cleanedData[bool1&bool2, 3:columnLen])
row <- row + 1
}
}
head(result)
write.table(result, "data_with_means.txt") # write out the 2nd dataset
# data <- read.table("./data_with_means.txt")
# data[1:12, 1:3]
data <- read.table("./data_with_means.txt")
data[1:12, 1:3]
data[1:12, 1:5]
data[1:1100, 1:5]
data[1:181, 1:5]
data[1:181, 1:3]
data[1:181, 1:4]
data[1:180, 1:4]
data[1:180, 1:45
]
data[1:18, 1:10]
data[1:18, 1:10]
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
head(result)
write.table(result, "tidyDataset.txt" row.name="FALSE") # write final dataset to project directory
head(result)
write.table(result, "tidyDataset.txt" row.names="FALSE") # write final dataset to project directory
head(result)
write.table(result, "tidyDataset.txt", row.names="FALSE") # write final dataset to project directory
head(result)
write.table(result, "tidyDataset.txt" row.names=FALSE) # write final dataset to project directory
head(result)
write.table(result, "tidyDataset.txt" row.names=FALSE) # write final dataset to project directory
head(result)
write.table(result, "tidyDataset.txt" row.name=FALSE) # write final dataset to project directory
head(result)
write.table(result, "tidyDataset.txt", row.name=FALSE) # write final dataset to project directory
head(result)
write.table(result, "tidyDataset.txt", row.name=TRUE) # write final dataset to project directory
View(joinData)
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
data <- read.table("./tidyDataset.txt")
data[1:20, 1:3]
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
data <- read.table("./tidyDataset.txt")
data[1:20, 1:3]
data <- read.table("./tidyDataset.txt")
data[1:180, 1:68]
data <- read.table("./tidyDataset.txt")
data[1:180, 1:69]
data <- read.table("./tidyDataset.txt")
data[1:181, 1:68]
data <- read.table("./tidyDataset.txt")
data[1:182, 1:68]
data <- read.table("./tidyDataset.txt")
data[1:190, 1:68]
data <- read.table("./tidyDataset.txt")
data[1:190, 1:2]
data <- read.table("./tidyDataset.txt")
data[1:10, 1:2]
data <- read.table("./tidyDataset.txt")
data[1:10, 1:68]
data <- read.table("./tidyDataset.txt")
data[1:181, 1:68]
# data <- read.table("./tidyDataset.txt")
# data[1:20, 1:5]
data <- read.table("./tidyDataset.txt")
data[1:20, 1:5]
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
source('~/Desktop/coursera/GACDProjectTidy/run_analysis.R')
setwd("~/Desktop/coursera/EDAProject2ParticulareMatter/")
# create data directory if it doesn't exist
if (!file.exists("NEIdata")){
dir.create("NEIdata")
}
# create figure directory if it doesn't exist
if (!file.exists("figure")){
dir.create("figure")
}
# EPA data file location
url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
# Download file and unzip it
td = tempdir()
tf = tempfile(tmpdir=td, fileext=".zip")
download.file(url, tf, method="curl")
dp = paste(file.path(getwd()),"/data",sep="")
unzip(tf, exdir=dp, overwrite=TRUE)
getwd()
setwd("~/Desktop/coursera/EDAProject2ParticulareMatter/")
setwd("~/Desktop/coursera/EDAProject2ParticulareMatter")
setwd("~/Desktop/coursera/EDAProject2ParticulateMatter")
setwd("~/Desktop/coursera/EDAProject2ParticulateMatter/")
# create data directory if it doesn't exist
if (!file.exists("NEIdata")){
dir.create("NEIdata")
}
# create figure directory if it doesn't exist
if (!file.exists("figure")){
dir.create("figure")
}
# EPA data file location
url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
# Download file and unzip it
tdir = tempdir()
tfile = tempfile(tmpdir=tdir, fileext=".zip")
download.file(url, tfile, method="curl")
datapath = paste(file.path(getwd()),"/data",sep="")
unzip(tfile, exdir=datapath, overwrite=TRUE)
setwd("~/Desktop/coursera/EDAProject2ParticulateMatter/")
# create data directory if it doesn't exist
if (!file.exists("NEIdata")){
dir.create("NEIdata")
}
# create figure directory if it doesn't exist
if (!file.exists("figure")){
dir.create("figure")
}
# EPA data file location
url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
# Download file and unzip it
tdir = tempdir()
tfile = tempfile(tmpdir=tdir, fileext=".zip")
download.file(url, tfile, method="curl")
datapath = paste(file.path(getwd()),"/NEIdata",sep="")
unzip(tfile, exdir=datapath, overwrite=TRUE)
setwd("~/Desktop/coursera/EDAProject2ParticulateMatter/")
# create data directory if it doesn't exist
if (!file.exists("NEIdata")){
dir.create("NEIdata")
}
# create figure directory if it doesn't exist
if (!file.exists("figure")){
dir.create("figure")
}
# EPA data file location
url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
# Download file and unzip it
tdir = tempdir()
tfile = tempfile(tmpdir=tdir, fileext=".zip")
download.file(url, tfile, method="curl")
datapath = paste(file.path(getwd()),"/NEIdata",sep="")
unzip(tfile, exdir=datapath, overwrite=TRUE)
# Check if both data exist. If not, load the data.
if (!"neiData" %in% ls()) {
neiData <- readRDS("./NEIdata/summarySCC_PM25.rds")
}
if (!"sccData" %in% ls()) {
sccData <- readRDS("./NEIdata/Source_Classification_Code.rds")
}
head(neiData)
head(sccData)
dim(neiData) # 6497651   6
dim(sccData) # 11717    15
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot5.png",
width = 480, height = 480,
units = "px")
motor <- grep("motor", sccData$Short.Name, ignore.case = T)
motor <- sccData[motor, ]
motor <- subset[subset$SCC %in% motor$SCC, ]
motorEmissions <- aggregate(motor$Emissions, list(motor$year), FUN = "sum")
plot(motorEmissions, type = "l", xlab = "Year",
main = "Total Emissions From Motor Vehicle Sources\n from 1999 to 2008 in Baltimore City",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
# Make Plot
####################
# Have total emissions from PM2.5 decreased in the United States from 1999 to 2008? Using the base plotting system, make a plot showing the total PM2.5 emission from all sources for each of the years 1999, 2002, 2005, and 2008.
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot1.png",
width = 480, height = 480,
units = "px")
totalEmissions <- aggregate(neiData$Emissions, list(neiData$year), FUN = "sum")
# options(scipen=0)
# options(scipen=999)
plot(totalEmissions, type = "l", xlab = "Year",
main = "Total Emissions in the United States from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot1.png",
width = 480, height = 480,
units = "px")
totalEmissions <- aggregate(neiData$Emissions, list(neiData$year), FUN = "sum")
# options(scipen=0)
# options(scipen=999)
plot(totalEmissions, type = "l", xlab = "Year",
main = "Total Emissions in the United States from 1999 to 2008",
ylab = expression('Total PM'[2.5]*" Emission"))
dev.off()
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot1.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot1.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot1.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot2.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot2.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot2.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
getwd()
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
# Check if both data exist. If not, load the data.
if (!"neiData" %in% ls()) {
neiData <- readRDS("./NEIdata/summarySCC_PM25.rds")
}
if (!"sccData" %in% ls()) {
sccData <- readRDS("./NEIdata/Source_Classification_Code.rds")
}
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot1.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
library(ggplot2)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot3.png",
width = 480, height = 480,
units = "px")
g <- ggplot(subset, aes(year, Emissions, color = type))
g + geom_line(stat = "summary", fun.y = "sum") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle("Total Emissions in Baltimore City from 1999 to 2008")
dev.off()
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot1.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot1.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot2.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot1.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
library(ggplot2)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot3.png",
width = 480, height = 480,
units = "px")
g <- ggplot(subset, aes(year, Emissions, color = type))
g + geom_line(stat = "summary", fun.y = "sum") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle("Total Emissions in Baltimore City from 1999 to 2008")
dev.off()
library(ggplot2)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot3.png",
width = 480, height = 480,
units = "px")
g <- ggplot(subset, aes(year, Emissions, color = type))
g + geom_line(stat = "summary", fun.y = "sum") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle("Total Emissions in Baltimore City from 1999 to 2008")
dev.off()
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/Untitled.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
View(sccData)
View(sccData)
View(sccData)
View(neiData)
View(subset)
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
# Check if both data exist. If not, load the data.
if (!"neiData" %in% ls()) {
neiData <- readRDS("./NEIdata/summarySCC_PM25.rds")
}
if (!"sccData" %in% ls()) {
sccData <- readRDS("./NEIdata/Source_Classification_Code.rds")
}
library(ggplot2)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot3999.png",
width = 480, height = 480,
units = "px")
g <- ggplot(subset, aes(year, Emissions, color = type))
g + geom_line(stat = "summary", fun.y = "sum") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle("Total Emissions in Baltimore City from 1999 to 2008")
dev.off()
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot1.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot2.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
getwd()
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot1.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot4.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
library(ggplot2)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot3.png",
width = 480, height = 480,
units = "px")
g <- ggplot(subset, aes(year, Emissions, color = type))
g + geom_line(stat = "summary", fun.y = "sum") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle("Total Emissions in Baltimore City from 1999 to 2008")
dev.off()
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
library(ggplot2)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot3.png",
width = 480, height = 480,
units = "px")
g <- ggplot(subset, aes(year, Emissions, color = type))
g + geom_line(stat = "summary", fun.y = "sum") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle("Total Emissions in Baltimore City from 1999 to 2008")
dev.off()
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot3.R')
library(ggplot2)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot3.png",
width = 480, height = 480,
units = "px")
g <- ggplot(subset, aes(year, Emissions, color = type))
g + geom_line(stat = "summary", fun.y = "sum") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle("Total Emissions in Baltimore City from 1999 to 2008")
dev.off()
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot5.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot6.R')
library(ggplot2)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot6.png",
width = 480, height = 480,
units = "px", bg = "transparent")
motor <- grep("motor", sccData$Short.Name, ignore.case = T)
motor <- sccData[motor, ]
motor <- subset[subset$SCC %in% motor$SCC, ]
g <- ggplot(motor, aes(year, Emissions, color = fips))
g + geom_line(stat = "summary", fun.y = "sum") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle("Comparison of Total Emissions From Motor\n Vehicle Sources in Baltimore City\n and Los Angeles County from 1999 to 2008") +
scale_colour_discrete(name = "Group", label = c("Los Angeles","Baltimore"))
dev.off()
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot5.R')
source('~/Desktop/coursera/EDAProject2ParticulateMatter/plot6.R')
subset <- neiData[neiData$fips == "24510"|neiData$fips == "06037", ]
library(ggplot2)
par("mar"=c(5.1, 4.5, 4.1, 2.1))
png(filename = "./figure/plot6.png",
width = 480, height = 480,
units = "px", bg = "transparent")
motor <- grep("motor", sccData$Short.Name, ignore.case = T)
motor <- sccData[motor, ]
motor <- subset[subset$SCC %in% motor$SCC, ]
g <- ggplot(motor, aes(year, Emissions, color = fips))
g + geom_line(stat = "summary", fun.y = "sum") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle("Comparison of Total Emissions From Motor\n Vehicle Sources in Baltimore City and \nLos Angeles County from 1999 to 2008") +
scale_colour_discrete(name = "Group", label = c("Los Angeles","Baltimore"))
dev.off()
